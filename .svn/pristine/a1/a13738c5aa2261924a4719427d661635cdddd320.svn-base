"use strict";
cc._RF.push(module, 'a0ea2Faum1JDKkSr0Ka631L', 'GameRankingList');
// Script/GameRankingList.js

"use strict";

cc.Class({
  "extends": cc.Component,
  properties: {
    rankingScrollView: cc.ScrollView,
    scrollViewContent: cc.Node,
    selfRankItem: cc.Node,
    prefabRankItem: cc.Prefab,
    prefabGameOverRank: cc.Prefab,
    gameOverRankNode: cc.Node,
    gameOverRankLayout: cc.Node,
    loadingLabel: cc.Node,
    //加载文字
    iconSpriteFrame: {
      "default": [],
      type: cc.SpriteFrame
    }
  },
  onLoad: function onLoad() {
    var _this = this;

    this.removeChild();
    this.CC_WECHATGAME = true;

    if (this.CC_WECHATGAME) {
      window.wx.onMessage(function (data) {
        console.log("接收主域发来消息：", data);

        if (data.messageType == 0) {
          //移除排行榜
          _this.removeChild();
        } else if (data.messageType == 1) {
          //获取好友排行榜
          _this.fetchFriendData();
        }
      });
    }
  },
  removeChild: function removeChild() {
    this.rankingScrollView.node.active = false;
    this.scrollViewContent.removeAllChildren();
    this.gameOverRankNode.active = false;
    this.gameOverRankLayout.removeAllChildren();
    this.loadingLabel.getComponent(cc.Label).string = "玩命加载中...";
    this.loadingLabel.active = true;
  },
  fetchFriendData: function fetchFriendData() {
    var _this2 = this;

    this.removeChild();
    this.rankingScrollView.node.active = true;

    if (this.CC_WECHATGAME) {
      wx.getUserInfo({
        openIdList: ['selfOpenId'],
        success: function success(userRes) {
          _this2.loadingLabel.active = false;
          console.log('success', userRes.data);
          var userData = userRes.data[0]; //取出所有好友数据

          wx.getFriendCloudStorage({
            keyList: ["nuoduidui"],
            success: function success(res) {
              console.log("wx.getFriendCloudStorage success", res);
              var data = res.data;
              data.sort(function (a, b) {
                if (a.KVDataList.length == 0 && b.KVDataList.length == 0) {
                  return 0;
                }

                if (a.KVDataList.length == 0) {
                  return 1;
                }

                if (b.KVDataList.length == 0) {
                  return -1;
                }

                return JSON.parse(b.KVDataList[0].value).score - JSON.parse(a.KVDataList[0].value).score;
              });

              _this2.scrollViewContent.removeAllChildren();

              for (var i = 0; i < data.length; i++) {
                var playerInfo = data[i];
                var item = cc.instantiate(_this2.prefabRankItem);
                item.getComponent('RankItem').init(i, playerInfo);

                _this2.scrollViewContent.addChild(item);

                _this2.selfRankItem.active = true;

                if (data[i].avatarUrl == userData.avatarUrl) {
                  var score = 0;

                  if (playerInfo.KVDataList.length != 0) {
                    if (JSON.parse(playerInfo.KVDataList[0].value).score == undefined) {
                      score = 0;
                    } else {
                      score = JSON.parse(playerInfo.KVDataList[0].value).score;
                    }
                  } else {
                    score = 0;
                  }

                  var level = 0;

                  if (playerInfo.KVDataList.length != 0) {
                    if (JSON.parse(playerInfo.KVDataList[0].value).level == undefined) {
                      level = 0;
                    } else {
                      level = JSON.parse(playerInfo.KVDataList[0].value).level;
                    }
                  } else {
                    level = 0;
                  }

                  if (i < 3) {
                    _this2.selfRankItem.getChildByName("img_rank1").active = true;
                    _this2.selfRankItem.getChildByName("img_rank1").getComponent(cc.Sprite).spriteFrame = _this2.iconSpriteFrame[i];
                    _this2.selfRankItem.getChildByName("rank").active = false;
                  } else {
                    _this2.selfRankItem.getChildByName("img_rank1").active = false;
                    _this2.selfRankItem.getChildByName("rank").active = true;
                    _this2.selfRankItem.getChildByName("rank").getComponent(cc.Label).string = 0 == i ? "100+" : i + 1 + "";
                  }

                  _this2.selfRankItem.getChildByName("score").getComponent(cc.Label).string = score + "[" + level + "]";
                  _this2.selfRankItem.getChildByName("level").getComponent(cc.Label).string = "第" + level + "关";
                }
              }

              if (data.length <= 8) {
                var layout = _this2.scrollViewContent.getComponent(cc.Layout);

                layout.resizeMode = cc.Layout.ResizeMode.NONE;
              }
            },
            fail: function fail(res) {
              console.log("wx.getFriendCloudStorage fail", res); // this.selfRankItem.active = false;

              _this2.loadingLabel.getComponent(cc.Label).string = "好友排名未授权，无法查看";
            }
          });
        },
        fail: function fail(res) {
          console.log("wx.getFriendCloudStorage2 fail", res); // this.selfRankItem.active = false;

          _this2.loadingLabel.getComponent(cc.Label).string = "好友排名未授权，无法查看";
        }
      });
    }
  }
});

cc._RF.pop();