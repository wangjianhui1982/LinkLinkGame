
const { ccclass, property } = cc._decorator;

import AudioManager from "./AudioManager";
import BaseComponent from "./BaseComponent";
import { Wzhcq_StorageName } from "./Enum";
import { Utils } from "./Utils";
import { WxPlatform } from "./WxPlatform";

@ccclass
export default class MeiRiTiaoZhan extends BaseComponent {

    @property(cc.Node)
    Wzhcq_challengeNumLabel: cc.Node = null;

    @property(cc.Node)
    Wzhcq_btnTxt: cc.Node = null;

    @property(cc.Node)
    Wzhcq_video: cc.Node = null;

    @property(cc.Prefab)
    Wzhcq_rankPrefab: cc.Prefab = null;

    @property(cc.Label)
    leijitongguan: cc.Label = null;

    @property(cc.Label)
    lianxvtongguan: cc.Label = null;

    Wzhcq_rankNode: any;
    Wzhcq_isclick = true;

    protected onLoad(): void {
        cc.tween(this.node)
            .to(0.3, { scale: 1 }, { easing: cc.easing.circOut })
            .start();

    }

    protected onEnable(): void {
        cc.tween(this.node)
            .to(0.3, { scale: 1 }, { easing: cc.easing.circOut })
            .start();

        this.initData();
    }

    initData() {
        this.Wzhcq_MeiritiaozhanState();

        this.leijitongguan.string = "累计通关 " + Utils.getInstance.Wzhcq_getItem(Wzhcq_StorageName.Wzhcq_tiaozhan_victory);
        this.lianxvtongguan.string = "Top连续通关 " + Utils.getInstance.Wzhcq_getItem(Wzhcq_StorageName.Wzhcq_tiaozhan_highestwinningStreak);

        this.updateData();
    }

    updateData() {
        let challengeNum = Utils.getInstance.Wzhcq_getItem(Wzhcq_StorageName.Wzhcq_challengeNum);
        this.Wzhcq_challengeNumLabel.getComponent(cc.Label).string = "挑战次数：" + challengeNum;

        if (challengeNum > 0) {
            this.Wzhcq_btnTxt.getComponent(cc.Label).string = "前往挑战";
            this.Wzhcq_video.active = false;
        }
        else {
            this.Wzhcq_btnTxt.getComponent(cc.Label).string = "获取次数";
            this.Wzhcq_video.active = true;
        }
    }

    Wzhcq_MeiritiaozhanState() {
        let Wzhcq_getCurTime = Utils.getInstance.Wzhcq_getItem(Wzhcq_StorageName.Wzhcq_MeiritiaozhanDay);
        let Wzhcq_CurTime = Utils.getInstance.getCurTime();

        let Wzhcq_MeiritiaozhanState = Utils.getInstance.Wzhcq_getItem(Wzhcq_StorageName.Wzhcq_MeiritiaozhanState);
        if (Wzhcq_MeiritiaozhanState > 0) {
            if (Wzhcq_getCurTime != Wzhcq_CurTime) {
                Utils.getInstance.Wzhcq_setItem(Wzhcq_StorageName.Wzhcq_MeiritiaozhanState, 0);
            }
        }
        else {
            if (Wzhcq_getCurTime != Wzhcq_CurTime) {
                Utils.getInstance.Wzhcq_setItem(Wzhcq_StorageName.Wzhcq_MeiritiaozhanState, 0);
            }
        }

        let Wzhcq_MeiritiaozhanState2 = Utils.getInstance.Wzhcq_getItem(Wzhcq_StorageName.Wzhcq_MeiritiaozhanState);
        if (Wzhcq_MeiritiaozhanState2 < 1) {
            Utils.getInstance.Wzhcq_setItem(Wzhcq_StorageName.Wzhcq_MeiritiaozhanState, 1);
            Utils.getInstance.Wzhcq_setItem(Wzhcq_StorageName.Wzhcq_challengeNum, 1);
        }
    }

    Wzhcq_clickRank_Btn() {
        AudioManager.instance.playAudioBtn_Click();

        if (!this.Wzhcq_rankNode) {
            this.Wzhcq_rankNode = cc.instantiate(this.Wzhcq_rankPrefab);
            this.Wzhcq_rankNode.parent = this.node;
        }
        this.Wzhcq_rankNode.active = true;
    }

    Wzhcq_clickReward_Btn() {
        AudioManager.instance.playAudioBtn_Click();

        let challengeNum = Utils.getInstance.Wzhcq_getItem(Wzhcq_StorageName.Wzhcq_challengeNum);
        if (challengeNum > 0) {
            challengeNum -= 1;
            Utils.getInstance.Wzhcq_setItem(Wzhcq_StorageName.Wzhcq_challengeNum, challengeNum);
            this.updateData();

            let Wzhcq_getCurTime = Utils.getInstance.getCurTime();
            Utils.getInstance.Wzhcq_setItem(Wzhcq_StorageName.Wzhcq_MeiritiaozhanDay, Wzhcq_getCurTime);

            Utils.getInstance.GameType = Utils.getInstance.meiritiaozhanData[6].type;
            cc.director.loadScene("Game");
        }
        else {
            let avtype = 0;
            WxPlatform.getInstance.showRewardVideo2(avtype, (data) => {
                //通过data判断激励视频广告是否加载成功、失败；判断是否中途退出还是完整播放
                if (data == 1) {
                    //激励视频完整播放 需要做的奖励；
                    Utils.getInstance.Wzhcq_setItem(Wzhcq_StorageName.Wzhcq_challengeNum, 2);
                    this.updateData();
                }
                else if (data == 2) {

                    wx.showToast({
                        title: '暂时没有广告了,请稍后再试',
                        icon: 'none'
                    })
                    this.Wzhcq_isclick = true;

                }
                else if (data == 0) {

                    wx.showToast({
                        title: '播放中途退出',
                        icon: 'none'
                    })
                    this.Wzhcq_isclick = true;

                }
            })
        }
    }

    Wzhcq_clickCancel_Btn() {
        AudioManager.instance.playAudioBtn_Click();

        this.Wzhcq_close();
    }

    Wzhcq_close() {
        this.node.active = false;
        this.node.scale = 0;
    }
}
